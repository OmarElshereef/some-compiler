/* block comment
   spanning lines */

const int C = 100;
lint L = 123456;
llint LL = 9876543210;
float F = 1.5;
double D;
char ch = 'Z';
string msg = "Test";
bool flag = false;

/* simple charâ†’char function */
char to_upper(char c) {
    return c;
}

/* unary, arithmetic, return */
int negate(int x) {
    return -x;
}

/* do-while loop */
void side_effect() {
    int i = 0;
    do {
        i = i + 1;
    } while (i < 3);
}

/* if / else, relational, logical, bitwise */
int complex_fn(int a, int b, int c) {
    int result = a * b + c;
    if ( (result >= 50 && b != 0) ) {
        result = result ^ C;      // bitwise XOR
    } else {
        result = result & C;      // bitwise AND
    }
    return result;
}

/* for-loop + nested if + function call */
void loop_test() {
    for (int i = 0; i < 2; i++) {
        ch = to_upper(ch);
        if (!flag) {
            ch = 'A';
        }
    }
}

/* everything together in main */
int main() {
    // assignment, arithmetic, function calls
    double D2 = F / 2;
    flag = true;
    int neg = negate(-5);
    side_effect();
    int comp = complex_fn(2, 3, 4);
    loop_test();

    // while-loop + unary post-inc
    int x = 0;
    while (x < 2) {
        x++;
    }

    // switch with case & default
    switch (x) {
        case 0: msg = "zero"; break;
        default: msg = "other"; break;
    }

    return 0;
}
